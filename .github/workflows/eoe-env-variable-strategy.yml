name: EOE environment variable strategy

on:
  workflow_dispatch:
    inputs:
      sel_env:
        type: choice
        options:
          - 'SANDBOX'
          - 'STAGING'
          - 'PRODUCTION'
        default: 'PRODUCTION'
        required: true
        description: Pick an environment to deploy

jobs:
  prep-env-vars:
    runs-on: ubuntu-latest
    outputs:
      SUP_TEST: ${{ steps.prep-env-vars.outputs.SUP_TEST }}
      SET_TEST: ${{ steps.prep-env-vars.outputs.SET_TEST }}
    steps:
      - run: echo ${{ github.event.inputs.sel_env }}
      
      - name: Prep env vars (sandbox)
        if: ${{ github.event.inputs.sel_env == 'SANDBOX' }}
        run: |
          echo "SUP_TEST=valor_sandbox" >> $GITHUB_ENV
          echo "SET_TEST=value_sandbox" >> $GITHUB_ENV
          
      - name: Prep env vars (staging)
        if: ${{ github.event.inputs.sel_env == 'STAGING' }}
        run: |
          echo "SUP_TEST=valor_staging" >> $GITHUB_ENV
          echo "SET_TEST=value_staging" >> $GITHUB_ENV
          
      - name: Prep env vars (production)
        if: ${{ github.event.inputs.sel_env == 'PRODUCTION' }}
        run: |
          echo "SUP_TEST=valor_production" >> $GITHUB_ENV
          echo "SET_TEST=value_production" >> $GITHUB_ENV
          
      - name: Prep output vars
        id: prep-env-vars
        run: |
          echo "::set-output name=SUP_TEST::${{ env.SUP_TEST }}"
          echo "::set-output name=SET_TEST::${{ env.SET_TEST }}"
          
  set-envs-for-current-job:
    runs-on: ubuntu-latest
    needs: [prep-env-vars]
    env:
      SUP_TEST: ${{ needs.prep-env-vars.outputs.SUP_TEST }}
      SET_TEST: ${{ needs.prep-env-vars.outputs.SET_TEST }}
    steps:
      - name: Check env variables
        run: |
          echo ${{ env.SUP_TEST }}
          echo ${{ env.SET_TEST }}

      - name: Check previous job
        run: |
          echo ${{ toJSON(needs.prep-env-vars) }}
